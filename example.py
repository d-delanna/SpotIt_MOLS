
# Non-Example of a Latin Square of Order 3:
# two 0's in first column
# two 2's in last column

not_ls = [
    [1, 0, 2],
    [0, 2, 1],
    [0, 1, 2]
]

# Example Latin Squares of Order 10:
# (ls1, ls2) are orthogonal
# (ls1, ls3) are orthgonal
# (ls2, ls3) are NOT orthogonal

ls1 = [
    [0, 8, 9, 7, 5, 6, 4, 2, 3, 1],
    [9, 1, 4, 6, 2, 7, 3, 8, 0, 5],
    [7, 4, 2, 5, 1, 3, 8, 6, 9, 0],
    [8, 6, 5, 3, 9, 2, 1, 0, 4, 7],
    [6, 2, 1, 8, 4, 0, 9, 5, 7, 3],
    [4, 9, 3, 2, 7, 5, 0, 1, 6, 8],
    [5, 3, 7, 1, 0, 8, 6, 9, 2, 4],
    [3, 5, 0, 9, 8, 4, 2, 7, 1, 6],
    [1, 7, 6, 0, 3, 9, 5, 4, 8, 2],
    [2, 0, 8, 4, 6, 1, 7, 3, 5, 9]
]

ls2 = [   
    [0, 7, 8, 9, 1, 2, 3, 4, 5, 6],
    [9, 0, 6, 1, 8, 3, 2, 5, 4, 7],
    [7, 2, 0, 4, 3, 9, 1, 8, 6, 5],
    [8, 5, 3, 0, 2, 1, 7, 6, 9, 4],
    [6, 9, 5, 3, 0, 7, 4, 2, 1, 8],
    [4, 1, 7, 6, 5, 0, 8, 9, 3, 2],
    [5, 4, 2, 8, 9, 6, 0, 3, 7, 1],
    [3, 6, 1, 7, 4, 8, 5, 0, 2, 9],
    [1, 8, 4, 2, 6, 5, 9, 7, 0, 3],
    [2, 3, 9, 5, 7, 4, 6, 1, 8, 0]
]

ls3 = [   
    [0, 7, 8, 9, 1, 2, 3, 4, 5, 6],
    [6, 4, 2, 8, 9, 5, 1, 3, 7, 0],
    [4, 9, 5, 3, 2, 7, 6, 0, 1, 8],
    [5, 1, 7, 6, 4, 3, 8, 9, 0, 2],
    [3, 2, 9, 0, 7, 1, 5, 6, 8, 4],
    [1, 0, 3, 7, 6, 8, 2, 5, 4, 9],
    [2, 8, 0, 1, 3, 4, 9, 7, 6, 5],
    [9, 5, 4, 2, 8, 6, 0, 1, 3, 7],
    [7, 3, 6, 5, 0, 9, 4, 8, 2, 1],
    [8, 6, 1, 4, 5, 0, 7, 2, 9, 3]
]

# -------------------------------------------------------------------------------------------

game = MOLSToSpotIt(ls1, ls2)

print(game)

# SpotIt Game
# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]

# [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
# [1, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
# [1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41]
# [1, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]
# [1, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
# [1, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71]
# [1, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81]
# [1, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91]
# [1, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101]
# [1, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111]

# [2, 12, 22, 32, 42, 52, 62, 72, 82, 92, 102]
# [2, 13, 23, 33, 43, 53, 63, 73, 83, 93, 103]
# [2, 14, 24, 34, 44, 54, 64, 74, 84, 94, 104]
# [2, 15, 25, 35, 45, 55, 65, 75, 85, 95, 105]
# [2, 16, 26, 36, 46, 56, 66, 76, 86, 96, 106]
# [2, 17, 27, 37, 47, 57, 67, 77, 87, 97, 107]
# [2, 18, 28, 38, 48, 58, 68, 78, 88, 98, 108]
# [2, 19, 29, 39, 49, 59, 69, 79, 89, 99, 109]
# [2, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110]
# [2, 21, 31, 41, 51, 61, 71, 81, 91, 101, 111]

# [3, 12, 30, 41, 49, 57, 68, 76, 84, 95, 103]
# [3, 21, 23, 36, 48, 54, 69, 75, 90, 92, 107]
# [3, 19, 26, 34, 47, 53, 65, 80, 88, 101, 102]
# [3, 20, 28, 37, 45, 61, 64, 73, 82, 96, 109]
# [3, 18, 24, 33, 50, 56, 62, 81, 87, 99, 105]
# [3, 16, 31, 35, 44, 59, 67, 72, 83, 98, 110]
# [3, 17, 25, 39, 43, 52, 70, 78, 91, 94, 106]
# [3, 15, 27, 32, 51, 60, 66, 74, 89, 93, 108]
# [3, 13, 29, 38, 42, 55, 71, 77, 86, 100, 104]
# [3, 14, 22, 40, 46, 58, 63, 79, 85, 97, 111]

# [4, 12, 29, 40, 51, 53, 64, 75, 86, 97, 108]
# [4, 21, 22, 38, 43, 60, 65, 74, 87, 96, 109]
# [4, 19, 24, 32, 46, 55, 71, 73, 90, 98, 107]
# [4, 20, 27, 35, 42, 54, 63, 79, 88, 101, 106]
# [4, 18, 31, 37, 45, 52, 69, 76, 84, 93, 110]
# [4, 16, 23, 39, 48, 57, 62, 80, 91, 95, 104]
# [4, 17, 26, 34, 50, 61, 68, 72, 85, 99, 103]
# [4, 15, 28, 33, 49, 56, 70, 77, 82, 94, 111]
# [4, 13, 30, 36, 44, 58, 67, 81, 89, 92, 105]
# [4, 14, 25, 41, 47, 59, 66, 78, 83, 100, 102]

print(game.group(3))

# Group 3
# [3, 12, 30, 41, 49, 57, 68, 76, 84, 95, 103]
# [3, 21, 23, 36, 48, 54, 69, 75, 90, 92, 107]
# [3, 19, 26, 34, 47, 53, 65, 80, 88, 101, 102]
# [3, 20, 28, 37, 45, 61, 64, 73, 82, 96, 109]
# [3, 18, 24, 33, 50, 56, 62, 81, 87, 99, 105]
# [3, 16, 31, 35, 44, 59, 67, 72, 83, 98, 110]
# [3, 17, 25, 39, 43, 52, 70, 78, 91, 94, 106]
# [3, 15, 27, 32, 51, 60, 66, 74, 89, 93, 108]
# [3, 13, 29, 38, 42, 55, 71, 77, 86, 100, 104]
# [3, 14, 22, 40, 46, 58, 63, 79, 85, 97, 111]

print(game.group(4))

# Group 4
# [4, 12, 29, 40, 51, 53, 64, 75, 86, 97, 108]
# [4, 21, 22, 38, 43, 60, 65, 74, 87, 96, 109]
# [4, 19, 24, 32, 46, 55, 71, 73, 90, 98, 107]
# [4, 20, 27, 35, 42, 54, 63, 79, 88, 101, 106]
# [4, 18, 31, 37, 45, 52, 69, 76, 84, 93, 110]
# [4, 16, 23, 39, 48, 57, 62, 80, 91, 95, 104]
# [4, 17, 26, 34, 50, 61, 68, 72, 85, 99, 103]
# [4, 15, 28, 33, 49, 56, 70, 77, 82, 94, 111]
# [4, 13, 30, 36, 44, 58, 67, 81, 89, 92, 105]
# [4, 14, 25, 41, 47, 59, 66, 78, 83, 100, 102]

# --------------------------------------------------------------------------------

mols = SpotItToMOLS(game.game)
# // reverts back to given latin squares

print(mols)

# MOLS(10)
# [0, 8, 9, 7, 5, 6, 4, 2, 3, 1]
# [9, 1, 4, 6, 2, 7, 3, 8, 0, 5]
# [7, 4, 2, 5, 1, 3, 8, 6, 9, 0]
# [8, 6, 5, 3, 9, 2, 1, 0, 4, 7]
# [6, 2, 1, 8, 4, 0, 9, 5, 7, 3]
# [4, 9, 3, 2, 7, 5, 0, 1, 6, 8]
# [5, 3, 7, 1, 0, 8, 6, 9, 2, 4]
# [3, 5, 0, 9, 8, 4, 2, 7, 1, 6]
# [1, 7, 6, 0, 3, 9, 5, 4, 8, 2]
# [2, 0, 8, 4, 6, 1, 7, 3, 5, 9]

# [0, 7, 8, 9, 1, 2, 3, 4, 5, 6]
# [9, 0, 6, 1, 8, 3, 2, 5, 4, 7]
# [7, 2, 0, 4, 3, 9, 1, 8, 6, 5]
# [8, 5, 3, 0, 2, 1, 7, 6, 9, 4]
# [6, 9, 5, 3, 0, 7, 4, 2, 1, 8]
# [4, 1, 7, 6, 5, 0, 8, 9, 3, 2]
# [5, 4, 2, 8, 9, 6, 0, 3, 7, 1]
# [3, 6, 1, 7, 4, 8, 5, 0, 2, 9]
# [1, 8, 4, 2, 6, 5, 9, 7, 0, 3]
# [2, 3, 9, 5, 7, 4, 6, 1, 8, 0]

# ------------------------------------------------------------------------------------

check = Check(ls1, ls2, ls3)

check.is_latin_square(not_ls)

# No repeated numbers in rows.
# First repeated number in column 0
# // return : False

check.are_orthogonal(ls1, ls2)

# Latin squares are orthogonal.
# // return : True

check.are_orthogonal(ls2, ls3)

# // Repeated (i, j) at (row, column): [(r1, c1), (r2, c2)]
# // Top left of table has (row, column): (0, 0))

# // This means i on ls2 appears in the same row and column 
# // as j on ls3 more than once at the given coordinates

# Repeated (3, 7) at (row, column): [(2, 3), (7, 6)]
# Repeated (6, 7) at (row, column): [(3, 5), (6, 9)]
# Repeated (9, 7) at (row, column): [(5, 2), (9, 7)]
# Repeated (1, 8) at (row, column): [(3, 1), (8, 4)]
# Repeated (4, 8) at (row, column): [(1, 6), (4, 7)]
# Repeated (7, 8) at (row, column): [(6, 3), (7, 8)]
# Repeated (2, 9) at (row, column): [(1, 2), (9, 5)]
# Repeated (5, 9) at (row, column): [(2, 4), (5, 8)]
# Repeated (8, 9) at (row, column): [(4, 1), (8, 9)]
# // return: False

check.are_mutually_orthog()

# Checking Latin Square 1
# No repeated numbers in rows.
# No repeated numbers in columns.

# Checking Latin Square 2
# No repeated numbers in rows.
# No repeated numbers in columns.

# Checking Latin Square 3
# No repeated numbers in rows.
# No repeated numbers in columns.

# Checking Orthogonality of Latin Squares (1, 2)
# Latin squares are orthogonal.

# Checking Orthogonality of Latin Squares (1, 3)
# Latin squares are orthogonal.

# Checking Orthogonality of Latin Squares (2, 3)
# Repeated (3, 7) at (row, column): [(2, 3), (7, 6)]
# Repeated (6, 7) at (row, column): [(3, 5), (6, 9)]
# Repeated (9, 7) at (row, column): [(5, 2), (9, 7)]
# Repeated (1, 8) at (row, column): [(3, 1), (8, 4)]
# Repeated (4, 8) at (row, column): [(1, 6), (4, 7)]
# Repeated (7, 8) at (row, column): [(6, 3), (7, 8)]
# Repeated (2, 9) at (row, column): [(1, 2), (9, 5)]
# Repeated (5, 9) at (row, column): [(2, 4), (5, 8)]
# Repeated (8, 9) at (row, column): [(4, 1), (8, 9)]

# // return: False
